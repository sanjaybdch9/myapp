pipeline {
    agent any
    
    environment {
        // Define Docker image name and tag
        DOCKER_IMAGE = "sanjaybdch9/go_app"
        DOCKER_TAG = "go_app"
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout source code from your Git repository
                git 'https://github.com/sanjaybdch9/myapp.git'
            }
        }
        
        stage('Install GolangCI-Lint') {
            steps {
                // Install GolangCI-Lint
                sh 'go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest'
            }
        }
        
        stage('Lint') {
            steps {
                // Run GolangCI-Lint
                sh 'golangci-lint run'
            }
        }
        
        stage('Build') {
            steps {
                // Build the Docker image
                script {
                    docker.build(DOCKER_IMAGE + ":" + DOCKER_TAG, '-f Dockerfile .')
                }
            }
        }
        
        stage('Test') {
            steps {
                // Run tests
                sh 'go test ./...'
            }
        }
        
        stage('Deploy') {
            steps {
                // Push the Docker image to Docker Hub
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                        docker.image(DOCKER_IMAGE + ":" + DOCKER_TAG).push()
                    }
                }
            }
        }
    }
    
    post {
        always {
            // Clean up Docker images after the build
            cleanWs()
            sh 'docker rmi -f $(docker images -q)'
        }
    }
}
