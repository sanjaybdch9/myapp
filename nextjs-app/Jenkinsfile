pipeline {
    agent any

    environment {
        // Define Docker image name and tag
        DOCKER_IMAGE = "doc468991/ankush-nextjs-app"
        DOCKER_TAG = "v2-jenkins"
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the Git repository
                git 'https://github.com/AnkushPal98/Devops-Assignment-Inc42.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install Node.js dependencies
                sh 'npm install'
            }
        }

        stage('Lint') {
            steps {
                // Run ESLint
                sh 'npm run lint'
            }
        }

        stage('Format') {
            steps {
                // Run Prettier to format code
                sh 'npm run format'
            }
        }

        stage('Lint Fix') {
            steps {
                // Run ESLint with --fix flag to automatically fix linting issues
                sh 'npm run lint:fix'
            }
        }

        stage('Build') {
            steps {
                // Build the Docker image
                script {
                    docker.build(DOCKER_IMAGE + ":" + DOCKER_TAG, '-f Dockerfile .')
                }
            }
        }

        stage('Test') {
            steps {
                // Run tests
                sh 'npm test'
            }
        }

        stage('Build App') {
            steps {
                // Build the Next.js application
                sh 'npm run build'
            }
        }

        stage('Deploy') {
            steps {
                // Push the Docker image to Docker Hub
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                        docker.image(DOCKER_IMAGE + ":" + DOCKER_TAG).push()
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'CI/CD Pipeline succeeded!'
        }
        failure {
            echo 'CI/CD Pipeline failed!'
        }
    }
}
